// stylelint-disable max-nesting-depth
// stylelint-disable no-descending-specificity

@import '~@micromag/core/scss/variables';
@import '~@micromag/core/scss/placeholders';

.container {
    @extend %reset-viewer;

    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    background-color: $black;
    color: $white;

    &.landscape {
        .screensFrame {
            top: 0;
            bottom: 0;
            left: 50%;
            margin: auto;
            transform: translate(-50%, 0);
        }
    }

    &.hideMenu {
        .menuNavContainer {
            opacity: 0;
            pointer-events: none;
        }

        .menuTopContainer,
        .dots {
            opacity: 0;
            pointer-events: none;
        }
    }

    &.disableMenu {
        .menuNavContainer {
            pointer-events: none;
        }

        .menuTopContainer,
        .dots {
            pointer-events: none;
        }
    }
}

.content {
    position: absolute;
    z-index: 1;
    width: 100%;
    height: 100%;
    overflow: hidden;
    cursor: grab;
    user-select: none;
    touch-action: none;

    &:active {
        cursor: grabbing;
    }

    .withoutGestures & {
        cursor: inherit;
    }
}

// Viewer Menu: Two buttons, the "menu dots", the menu overlays
.menuNavContainer {
    position: absolute;
    z-index: 4;
    top: 0;
    width: 100%;
    touch-action: none;
    transition: opacity 0.5s $ease-in-out-sine, background-image 0.5s $ease-in-out-sine;

    // if playing a media and the controls are "collapsed", fade the buttons, too
    .fadeMenu & {
        opacity: 0.25;
    }

    &.withShadow {
        background-image: linear-gradient(rgba(0, 0, 0, 0.75), rgb(0, 0, 0, 0));

        .fadeMenu & {
            background-image: linear-gradient(rgba(0, 0, 0, 0), rgb(0, 0, 0, 0));
        }
    }

    &.isOpened {
        opacity: 1; // don't fade, even if video is playing in background

        .dots {
            opacity: 0;
            pointer-events: none;
        }

        &.withShadow {
            background-image: linear-gradient(rgba(0, 0, 0, 0.75), rgb(0, 0, 0, 0));
        }
    }
}

.menuTopContainer {
    display: flex;
    align-items: center;
    transition: opacity 0.2s $ease-in-out-sine;
}

.menuItem {
    display: block;
    width: 50%;
    touch-action: none;
    font-size: 8px;

    &:last-child {
        text-align: right;
    }
}

.menuButton {
    padding: 0.5rem 0.75rem;
    font-size: 0.8rem;

    // @media (min-width: 320px) {
    //     font-size: 1rem;
    // }

    // .menuButtonIcon {
    //     width: 30px;
    // }
}

.slidingButton {
    display: inline-block;
}

.screensMenuButtonToggled {
    right: 0;
    left: auto;
}

.dots {
    position: relative;
    z-index: 3;
    top: -0.25rem;
    padding: 0 0.5rem;
    transition: opacity 0.3s $ease-out-ramp;

    .hideMenu & {
        pointer-events: none;
    }
}

.menuContainer {
    @extend %fullscreen;
    z-index: 3;
    top: 0;
}

.menuShare,
.menuPreview {
    @extend %fullscreen;
    z-index: 4;
}

// Viewer Navigation: Left/Right icons on desktop
.navButton {
    display: none;
    visibility: hidden;
    position: absolute;
    z-index: 3;
    top: 50%;
    transform: translateY(-50%);
    border: 0;

    &.previous {
        left: 1.5rem;
    }

    &.next {
        right: 1.5rem;
    }

    @media screen and (min-width: 1024px) {
        display: block;
        visibility: visible;
    }
}

.screensFrame {
    @extend %fullscreen;

    z-index: 1;
    touch-action: none;
}

.screenContainer {
    @extend %fullscreen;
    @extend %focus-outline;

    display: flex;
    height: 100%;
    opacity: 0; // transitions styles will override this one
}

.screen {
    pointer-events: none;

    .current & {
        pointer-events: auto;
    }
}

// Playback Controls for Video/Audio screen types
.playbackControls {
    position: absolute;
    z-index: 2;
    bottom: 0;
    left: 0;
    width: 100%;
    pointer-events: none;
}

// Animated Arrow that points to the next screen (to hint that user needs to click/tap/swipe to go to next screen)
.arrowHint {
    position: absolute;
    top: 70%;
    right: 5%;
}

// Embedded webpage in iframe (article screen)
.webView {
    z-index: 10;
}

// Text bubble that appears below the Share button (on screens that have been configured to display it)
$ease-woosh: cubic-bezier(0.25, 2, 0.2, 1);
$ease-hard-sine: cubic-bezier(0.9, 0, 0.2, 1);

.shareIncentiveContainer {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 10px;
    width: calc(100% - 20px);
    pointer-events: none;
}

.shareIncentive {
    display: inline-block;
    transform: translateY(-10px);
    transition: opacity 0.3s $ease-hard-sine, transform 0.3s $ease-hard-sine;
    opacity: 0;
    pointer-events: auto;

    .shareIncentiveVisible & {
        transform: translateY(0);
        transition: opacity 0.3s 0.5s $ease-woosh, transform 0.3s 0.5s $ease-woosh;
        opacity: 1;
    }
}
